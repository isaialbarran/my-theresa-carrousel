// =============================================================================
// THEME INDEX
// =============================================================================

// Import theme foundation
@use 'sass:color';
@use 'sass:map';
@use 'variables' as *;
@use 'mixins' as *;

// Theme Application
// -----------------------------------------------------------------------------

// Apply theme to root
:root {
  @include theme-colors($light-theme);

  // Add RGB variants for rgba() usage
  --primary-rgb: #{color.channel(map.get($light-theme, primary), "red")}, #{color.channel(map.get($light-theme, primary), "green")}, #{color.channel(map.get($light-theme, primary), "blue")};
  --secondary-rgb: #{color.channel(map.get($light-theme, secondary), "red")}, #{color.channel(map.get($light-theme, secondary), "green")}, #{color.channel(map.get($light-theme, secondary), "blue")};
  --success-rgb: #{color.channel(map.get($light-theme, success), "red")}, #{color.channel(map.get($light-theme, success), "green")}, #{color.channel(map.get($light-theme, success), "blue")};
  --warning-rgb: #{color.channel(map.get($light-theme, warning), "red")}, #{color.channel(map.get($light-theme, warning), "green")}, #{color.channel(map.get($light-theme, warning), "blue")};
  --error-rgb: #{color.channel(map.get($light-theme, error), "red")}, #{color.channel(map.get($light-theme, error), "green")}, #{color.channel(map.get($light-theme, error), "blue")};
}

// Dark theme
[data-theme='dark'],
.theme-dark {
  @include theme-colors($dark-theme);

  // Add RGB variants for rgba() usage
  --primary-rgb: #{color.channel(map.get($dark-theme, primary), "red")}, #{color.channel(map.get($dark-theme, primary), "green")}, #{color.channel(map.get($dark-theme, primary), "blue")};
  --secondary-rgb: #{color.channel(map.get($dark-theme, secondary), "red")}, #{color.channel(map.get($dark-theme, secondary), "green")}, #{color.channel(map.get($dark-theme, secondary), "blue")};
  --success-rgb: #{color.channel(map.get($dark-theme, success), "red")}, #{color.channel(map.get($dark-theme, success), "green")}, #{color.channel(map.get($dark-theme, success), "blue")};
  --warning-rgb: #{color.channel(map.get($dark-theme, warning), "red")}, #{color.channel(map.get($dark-theme, warning), "green")}, #{color.channel(map.get($dark-theme, warning), "blue")};
  --error-rgb: #{color.channel(map.get($dark-theme, error), "red")}, #{color.channel(map.get($dark-theme, error), "green")}, #{color.channel(map.get($dark-theme, error), "blue")};
}

// Auto theme (follows system preference)
@media (prefers-color-scheme: dark) {
  :root:not([data-theme='light']) {
    @include theme-colors($dark-theme);

    // Add RGB variants for rgba() usage
    --primary-rgb: #{color.channel(map.get($dark-theme, primary), "red")}, #{color.channel(map.get($dark-theme, primary), "green")}, #{color.channel(map.get($dark-theme, primary), "blue")};
    --secondary-rgb: #{color.channel(map.get($dark-theme, secondary), "red")}, #{color.channel(map.get($dark-theme, secondary), "green")}, #{color.channel(map.get($dark-theme, secondary), "blue")};
    --success-rgb: #{color.channel(map.get($dark-theme, success), "red")}, #{color.channel(map.get($dark-theme, success), "green")}, #{color.channel(map.get($dark-theme, success), "blue")};
    --warning-rgb: #{color.channel(map.get($dark-theme, warning), "red")}, #{color.channel(map.get($dark-theme, warning), "green")}, #{color.channel(map.get($dark-theme, warning), "blue")};
    --error-rgb: #{color.channel(map.get($dark-theme, error), "red")}, #{color.channel(map.get($dark-theme, error), "green")}, #{color.channel(map.get($dark-theme, error), "blue")};
  }
}